<template>
  <div class="container row g-3 mt-1 mx-auto">
    <!-- Kategoriyalar -->
    <div class="col-6 col-md-3 col-xl-3">
      <select class="form-select bg-dark text-light" v-model="selectedCategory">
        <option class="bg-dark text-light" disabled selected value="">
          {{ t("filters.categories") }}
        </option>
        <option v-for="cat in categories" :key="cat.id" :value="cat.id">
          {{ getCategoryName(cat) }}
        </option>
      </select>
    </div>

    <!-- Davlatlar -->
    <div class="col-6 col-md-3 col-xl-3">
      <select class="form-select bg-dark text-light" v-model="selectedCountry">
        <option class="bg-dark text-light" disabled selected value="">
          {{ t("filters.countries") }}
        </option>
        <option v-for="country in countries" :key="country.id" :value="country.id">
          {{ getCountryName(country) }}
        </option>
      </select>
    </div>

    <!-- Saralash -->
    <div class="col-6 col-md-3 col-xl-2">
      <select class="form-select bg-dark text-light" v-model="sortOption">
        <option disabled selected value="">{{ t("filters.sort") }}</option>
        <option value="desc">{{ t("filters.price_desc") }}</option>
        <option value="asc">{{ t("filters.price_asc") }}</option>
      </select>
    </div>

    <!-- Qidiruv -->
    <div class="col-6 col-md-3 col-xl-3">
      <input
        type="search"
        class="form-control bg-dark-subtle"
        :placeholder="t('filters.search_placeholder')"
        v-model="searchTerm"
      />
    </div>

    <!-- Qidiruv tugmasi -->
    <div class="col-12 col-md-12 col-xl-2">
      <button class="btn btn-primary">
        {{ t("filters.search_button") }}
      </button>
    </div>
  </div>
</template>

<script setup lang="ts">
import {ref, watch} from "vue";
import {useCategories} from "../hooks/useCategory";
import {useCountries} from "../hooks/useCountries";
import {useLanguageStore} from "../stores/language.ts";
import {useI18n} from "vue-i18n";

const langStore = useLanguageStore();
const {t} = useI18n();

// Ma'lumotlar
const {data: categories = []} = useCategories();
const {data: countries = []} = useCountries();

// Tarjima bo'yicha nom olish
const getCategoryName = (cat: any) => {
  switch (langStore.lang) {
    case "ru":
      return cat.name_ru || cat.name_uz;
    case "en":
      return cat.name_en || cat.name_uz;
    default:
      return cat.name_uz;
  }
};

const getCountryName = (country: any) => {
  switch (langStore.lang) {
    case "ru":
      return country.name_ru || country.name_uz;
    case "en":
      return country.name_en || country.name_uz;
    default:
      return country.name_uz;
  }
};

// Filter parametrlari
const selectedCategory = ref("");
const selectedCountry = ref("");
const searchTerm = ref("");
const sortOption = ref("");

// API query parametrlari
const queryParams = ref({});

watch([selectedCategory, selectedCountry, searchTerm, sortOption], () => {
  queryParams.value = {
    ...(selectedCategory.value && {cat1: selectedCategory.value}),
    ...(selectedCountry.value && {country: selectedCountry.value}),
    ...(searchTerm.value && {search: searchTerm.value}),
    ...(sortOption.value && {
      order:
        sortOption.value === "asc"
          ? "price_up"
          : sortOption.value === "desc"
            ? "price_down"
            : "",
    }),
    limit: 10,
  };
});
</script>

<style scoped>
select,
input {
  min-height: 40px;
}

inpiut::placeholder {
  color: #fff;
  opacity: 1;
}
</style>
